## Process this file with automake to produce Makefile.in

ACLOCAL_AMFLAGS = -I m4

AUTOMAKE_OPTIONS = foreign

AM_CXXFLAGS = -I$(srcdir)/src

EXTRA_DIST =                                                                 \
  README.txt                                                                 \
  INSTALL.txt                                                                \
  COPYING.txt                                                                \
  CONTRIBUTORS.txt                                                           \
  CHANGES.txt                                                                \
  $(capnpc_inputs)

CLEANFILES = $(capnpc_outputs) test_capnpc_middleman

# Deletes all the files generated by autoreconf.
MAINTAINERCLEANFILES =   \
  aclocal.m4             \
  config.guess           \
  config.sub             \
  configure              \
  depcomp                \
  install-sh             \
  ltmain.sh              \
  Makefile.in            \
  missing                \
  mkinstalldirs          \
  config.h.in            \
  stamp.h.in             \
  m4/ltsugar.m4          \
  m4/libtool.m4          \
  m4/ltversion.m4        \
  m4/lt~obsolete.m4      \
  m4/ltoptions.m4

maintainer-clean-local:
	-rm -rf build-aux

nobase_include_HEADERS =                                       \
  src/capnproto/macros.h                                       \
  src/capnproto/type-safety.h                                  \
  src/capnproto/blob.h                                         \
  src/capnproto/layout.h                                       \
  src/capnproto/list.h                                         \
  src/capnproto/message.h                                      \
  src/capnproto/io.h                                           \
  src/capnproto/serialize.h                                    \
  src/capnproto/serialize-packed.h                             \
  src/capnproto/generated-header-support.h

# No dynamic library for now since C++ binary compatibility is hard.
# It may make more sense to have every module statically link Cap'n Proto
# and pass around messages via memory pointers.
lib_LIBRARIES = libcapnproto.a

libcapnproto_a_SOURCES=                                        \
  src/capnproto/macros.c++                                     \
  src/capnproto/type-safety.c++                                \
  src/capnproto/blob.c++                                       \
  src/capnproto/arena.h                                        \
  src/capnproto/arena.c++                                      \
  src/capnproto/layout.c++                                     \
  src/capnproto/list.c++                                       \
  src/capnproto/message.c++                                    \
  src/capnproto/io.c++                                         \
  src/capnproto/serialize.c++                                  \
  src/capnproto/serialize-packed.c++

# Source files intentionally not included in the dist at this time:
#  src/capnproto/serialize-snappy*
#  src/capnproto/benchmark/...

# Tests ==============================================================

capnpc_inputs =                                                \
  src/capnproto/test.capnp

capnpc_outputs =                                               \
  src/capnproto/test.capnp.c++                                 \
  src/capnproto/test.capnp.h

# This should depend on $(capnpc_inputs), but then make mysteriously complains
# about a cyclic dependency.  I don't know where it is coming from.  I rummaged
# around in the generated Makefile a bit but couldn't figure it out.  I give
# up.  Automake is terrible.
test_capnpc_middleman:
	$(CAPNPC) $(capnpc_inputs)
	touch test_capnpc_middleman

$(capnpc_outputs): test_capnpc_middleman

BUILT_SOURCES = $(capnpc_outputs)

check_PROGRAMS = capnproto-test
capnproto_test_LDADD = -lgtest -lgtest_main libcapnproto.a
capnproto_test_SOURCES =                                       \
  src/capnproto/type-safety-test.c++                           \
  src/capnproto/blob-test.c++                                  \
  src/capnproto/layout-test.c++                                \
  src/capnproto/message-test.c++                               \
  src/capnproto/encoding-test.c++                              \
  src/capnproto/serialize-test.c++                             \
  src/capnproto/serialize-packed-test.c++                      \
  src/capnproto/test-util.c++                                  \
  src/capnproto/test-util.h
nodist_capnproto_test_SOURCES = $(capnpc_outputs)

TESTS = capnproto-test
